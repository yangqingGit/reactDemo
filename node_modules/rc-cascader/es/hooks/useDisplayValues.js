import { toPathOptions } from '../utils/treeUtil';
import * as React from 'react';
import { toPathKey } from '../utils/commonUtil';
export default (function (rawValues, options, fieldNames) {
  var displayRender = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (labels) {
    return labels.join(' / ');
  };
  return React.useMemo(function () {
    return rawValues.map(function (valueCells) {
      var valueOptions = toPathOptions(valueCells, options, fieldNames);
      var label = displayRender(valueOptions.map(function (_ref) {
        var _option$fieldNames$la;

        var option = _ref.option,
            value = _ref.value;
        return (_option$fieldNames$la = option === null || option === void 0 ? void 0 : option[fieldNames.label]) !== null && _option$fieldNames$la !== void 0 ? _option$fieldNames$la : value;
      }), valueOptions.map(function (_ref2) {
        var option = _ref2.option;
        return option;
      }));
      return {
        label: label,
        value: toPathKey(valueCells),
        valueCells: valueCells
      };
    });
  }, [rawValues, options, fieldNames, displayRender]);
});